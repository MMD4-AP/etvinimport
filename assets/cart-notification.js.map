{"version":3,"sources":["cart-notification.js"],"names":["CartNotification","HTMLElement","[object Object]","super","this","notification","document","getElementById","header","querySelector","onBodyClick","handleBodyClick","bind","addEventListener","evt","code","close","querySelectorAll","forEach","closeButton","classList","add","focus","trapFocus","once","body","remove","removeEventListener","removeTrapFocus","activeElement","parsedState","cartItemKey","key","getSectionsToRender","section","id","innerHTML","getSectionInnerHTML","sections","selector","reveal","open","html","DOMParser","parseFromString","target","closest","disclosure","element","customElements","define"],"mappings":"AAAA,MAAMA,yBAAyBC,YAC7BC,cACEC,QAEAC,KAAKC,aAAeC,SAASC,eAAe,qBAC5CH,KAAKI,OAASF,SAASG,cAAc,iBACrCL,KAAKM,YAAcN,KAAKO,gBAAgBC,KAAKR,MAE7CA,KAAKC,aAAaQ,iBAAiB,QAAUC,GAAqB,WAAbA,EAAIC,MAAqBX,KAAKY,SACnFZ,KAAKa,iBAAiB,yBAAyBC,QAASC,GACtDA,EAAYN,iBAAiB,QAAST,KAAKY,MAAMJ,KAAKR,QAI1DF,OACEE,KAAKC,aAAae,UAAUC,IAAI,UAAW,UAE3CjB,KAAKC,aAAaQ,iBAAiB,gBAAiB,KAClDT,KAAKC,aAAaiB,QAClBC,UAAUnB,KAAKC,eACd,CAAEmB,MAAM,IAEXlB,SAASmB,KAAKZ,iBAAiB,QAAST,KAAKM,aAG/CR,QACEE,KAAKC,aAAae,UAAUM,OAAO,UAEnCpB,SAASmB,KAAKE,oBAAoB,QAASvB,KAAKM,aAEhDkB,gBAAgBxB,KAAKyB,eAGvB3B,eAAe4B,GACX1B,KAAK2B,YAAcD,EAAYE,IAC/B5B,KAAK6B,sBAAsBf,QAASgB,IAClC5B,SAASC,eAAe2B,EAAQC,IAAIC,UAClChC,KAAKiC,oBAAoBP,EAAYQ,SAASJ,EAAQC,IAAKD,EAAQK,YAGnEnC,KAAKI,QAAQJ,KAAKI,OAAOgC,SAC7BpC,KAAKqC,OAGTvC,sBACE,MAAO,CACL,CACEiC,GAAI,4BACJI,SAAU,kCAAkCnC,KAAK2B,iBAEnD,CACEI,GAAI,4BAEN,CACEA,GAAI,qBAKVjC,oBAAoBwC,EAAMH,EAAW,oBACnC,OAAO,IAAII,WACRC,gBAAgBF,EAAM,aACtBjC,cAAc8B,GAAUH,UAG7BlC,gBAAgBY,GACd,MAAM+B,EAAS/B,EAAI+B,OACnB,GAAIA,IAAWzC,KAAKC,eAAiBwC,EAAOC,QAAQ,qBAAsB,CACxE,MAAMC,EAAaF,EAAOC,QAAQ,mCAClC1C,KAAKyB,cAAgBkB,EAAaA,EAAWtC,cAAc,WAAa,KACxEL,KAAKY,SAITd,iBAAiB8C,GACf5C,KAAKyB,cAAgBmB,GAIzBC,eAAeC,OAAO,oBAAqBlD","file":"cart-notification.js","sourcesContent":["class CartNotification extends HTMLElement {\n  constructor() {\n    super();\n\n    this.notification = document.getElementById('cart-notification');\n    this.header = document.querySelector('sticky-header');\n    this.onBodyClick = this.handleBodyClick.bind(this);\n    \n    this.notification.addEventListener('keyup', (evt) => evt.code === 'Escape' && this.close());\n    this.querySelectorAll('button[type=\"button\"]').forEach((closeButton) =>\n      closeButton.addEventListener('click', this.close.bind(this))\n    );\n  }\n\n  open() {\n    this.notification.classList.add('animate', 'active');\n\n    this.notification.addEventListener('transitionend', () => {\n      this.notification.focus();\n      trapFocus(this.notification);\n    }, { once: true });\n\n    document.body.addEventListener('click', this.onBodyClick);\n  }\n\n  close() {\n    this.notification.classList.remove('active');\n\n    document.body.removeEventListener('click', this.onBodyClick);\n\n    removeTrapFocus(this.activeElement);\n  }\n\n  renderContents(parsedState) {\n      this.cartItemKey = parsedState.key;\n      this.getSectionsToRender().forEach((section => {\n        document.getElementById(section.id).innerHTML =\n          this.getSectionInnerHTML(parsedState.sections[section.id], section.selector);\n      }));\n\n      if (this.header) this.header.reveal();\n      this.open();\n  }\n\n  getSectionsToRender() {\n    return [\n      {\n        id: 'cart-notification-product',\n        selector: `[id=\"cart-notification-product-${this.cartItemKey}\"]`,\n      },\n      {\n        id: 'cart-notification-button'\n      },\n      {\n        id: 'cart-icon-bubble'\n      }\n    ];\n  }\n\n  getSectionInnerHTML(html, selector = '.shopify-section') {\n    return new DOMParser()\n      .parseFromString(html, 'text/html')\n      .querySelector(selector).innerHTML;\n  }\n\n  handleBodyClick(evt) {\n    const target = evt.target;\n    if (target !== this.notification && !target.closest('cart-notification')) {\n      const disclosure = target.closest('details-disclosure, header-menu');\n      this.activeElement = disclosure ? disclosure.querySelector('summary') : null;\n      this.close();\n    }\n  }\n\n  setActiveElement(element) {\n    this.activeElement = element;\n  }\n}\n\ncustomElements.define('cart-notification', CartNotification);"]}