{"version":3,"sources":["predictive-search.js"],"names":["PredictiveSearch","HTMLElement","[object Object]","super","this","cachedResults","input","querySelector","predictiveSearchResults","isOpen","setupEventListeners","addEventListener","onFormSubmit","bind","debounce","event","onChange","onFocus","onFocusOut","onKeyup","onKeydown","value","trim","searchTerm","getQuery","length","getSearchResults","close","preventDefault","getAttribute","open","setTimeout","contains","document","activeElement","code","switchOption","selectOption","direction","moveUp","selectedElement","allElements","querySelectorAll","statusElement","textContent","nextElementSibling","previousElementSibling","setAttribute","setLiveRegionText","id","selectedProduct","click","queryKey","replace","toLowerCase","setLiveRegionLoadingState","renderSearchResults","fetch","routes","predictive_search_url","encodeURIComponent","then","response","ok","error","Error","status","text","resultsMarkup","DOMParser","parseFromString","innerHTML","catch","loadingText","statusText","setLiveRegionResults","removeAttribute","resultsMaxHeight","window","innerHeight","getElementById","getBoundingClientRect","bottom","style","maxHeight","getResultsMaxHeight","clearSearchTerm","selected","customElements","define"],"mappings":"AAAA,MAAMA,yBAAyBC,YAC7BC,cACEC,QACAC,KAAKC,cAAgB,GACrBD,KAAKE,MAAQF,KAAKG,cAAc,wBAChCH,KAAKI,wBAA0BJ,KAAKG,cAAc,4BAClDH,KAAKK,QAAS,EAEdL,KAAKM,sBAGPR,sBACeE,KAAKG,cAAc,eAC3BI,iBAAiB,SAAUP,KAAKQ,aAAaC,KAAKT,OAEvDA,KAAKE,MAAMK,iBAAiB,QAASG,SAAUC,IAC7CX,KAAKY,SAASD,IACb,KAAKF,KAAKT,OACbA,KAAKE,MAAMK,iBAAiB,QAASP,KAAKa,QAAQJ,KAAKT,OACvDA,KAAKO,iBAAiB,WAAYP,KAAKc,WAAWL,KAAKT,OACvDA,KAAKO,iBAAiB,QAASP,KAAKe,QAAQN,KAAKT,OACjDA,KAAKO,iBAAiB,UAAWP,KAAKgB,UAAUP,KAAKT,OAGvDF,WACE,OAAOE,KAAKE,MAAMe,MAAMC,OAG1BpB,WACE,MAAMqB,EAAanB,KAAKoB,WAEnBD,EAAWE,OAKhBrB,KAAKsB,iBAAiBH,GAJpBnB,KAAKuB,OAAM,GAOfzB,aAAaa,GACNX,KAAKoB,WAAWC,SAAUrB,KAAKG,cAAc,6BAA6BQ,EAAMa,iBAGvF1B,UACE,MAAMqB,EAAanB,KAAKoB,WAEnBD,EAAWE,SAEqB,SAAjCrB,KAAKyB,aAAa,WACpBzB,KAAK0B,OAEL1B,KAAKsB,iBAAiBH,IAI1BrB,aACE6B,WAAW,KACJ3B,KAAK4B,SAASC,SAASC,gBAAgB9B,KAAKuB,UAIrDzB,QAAQa,GAIN,OAHKX,KAAKoB,WAAWC,QAAQrB,KAAKuB,OAAM,GACxCZ,EAAMa,iBAEEb,EAAMoB,MACZ,IAAK,UACH/B,KAAKgC,aAAa,MAClB,MACF,IAAK,YACHhC,KAAKgC,aAAa,QAClB,MACF,IAAK,QACHhC,KAAKiC,gBAKXnC,UAAUa,GAGS,YAAfA,EAAMoB,MACS,cAAfpB,EAAMoB,MAENpB,EAAMa,iBAIV1B,aAAaoC,GACX,IAAKlC,KAAKyB,aAAa,QAAS,OAEhC,MAAMU,EAAuB,OAAdD,EACTE,EAAkBpC,KAAKG,cAAc,0BACrCkC,EAAcrC,KAAKsC,iBAAiB,MAC1C,IAAIR,EAAgB9B,KAAKG,cAAc,MAEnCgC,IAAWC,IAEfpC,KAAKuC,cAAcC,YAAc,IAE5BL,GAAUC,EACbN,EAAgBM,EAAgBK,oBAAsBJ,EAAY,GACzDF,IACTL,EAAgBM,EAAgBM,wBAA0BL,EAAYA,EAAYhB,OAAS,IAGzFS,IAAkBM,IAEtBN,EAAca,aAAa,iBAAiB,GACxCP,GAAiBA,EAAgBO,aAAa,iBAAiB,GAEnE3C,KAAK4C,kBAAkBd,EAAcU,aACrCxC,KAAKE,MAAMyC,aAAa,wBAAyBb,EAAce,MAGjE/C,eACE,MAAMgD,EAAkB9C,KAAKG,cAAc,2DAEvC2C,GAAiBA,EAAgBC,QAGvCjD,iBAAiBqB,GACf,MAAM6B,EAAW7B,EAAW8B,QAAQ,IAAK,KAAKC,cAC9ClD,KAAKmD,4BAEDnD,KAAKC,cAAc+C,GACrBhD,KAAKoD,oBAAoBpD,KAAKC,cAAc+C,IAI9CK,MAAM,GAAGC,OAAOC,2BAA2BC,mBAAmBrC,MAAeqC,mBAAmB,8BAA8BA,mBAAmB,sDAC9IC,KAAMC,IACL,IAAKA,EAASC,GAAI,CAChB,IAAIC,EAAQ,IAAIC,MAAMH,EAASI,QAE/B,MADA9D,KAAKuB,QACCqC,EAGR,OAAOF,EAASK,SAEjBN,KAAMM,IACL,MAAMC,GAAgB,IAAIC,WAAYC,gBAAgBH,EAAM,aAAa5D,cAAc,sCAAsCgE,UAC7HnE,KAAKC,cAAc+C,GAAYgB,EAC/BhE,KAAKoD,oBAAoBY,KAE1BI,MAAOR,IAEN,MADA5D,KAAKuB,QACCqC,IAIZ9D,4BACEE,KAAKuC,cAAgBvC,KAAKuC,eAAiBvC,KAAKG,cAAc,6BAC9DH,KAAKqE,YAAcrE,KAAKqE,aAAerE,KAAKyB,aAAa,qBAEzDzB,KAAK4C,kBAAkB5C,KAAKqE,aAC5BrE,KAAK2C,aAAa,WAAW,GAG/B7C,kBAAkBwE,GAChBtE,KAAKuC,cAAcI,aAAa,cAAe,SAC/C3C,KAAKuC,cAAcC,YAAc8B,EAEjC3C,WAAW,KACT3B,KAAKuC,cAAcI,aAAa,cAAe,SAC9C,KAGL7C,oBAAoBkE,GAClBhE,KAAKI,wBAAwB+D,UAAYH,EACzChE,KAAK2C,aAAa,WAAW,GAE7B3C,KAAKuE,uBACLvE,KAAK0B,OAGP5B,uBACEE,KAAKwE,gBAAgB,WACrBxE,KAAK4C,kBAAkB5C,KAAKG,cAAc,oDAAoDqC,aAGhG1C,sBAEE,OADAE,KAAKyE,iBAAmBC,OAAOC,YAAc9C,SAAS+C,eAAe,0BAA0BC,wBAAwBC,OAChH9E,KAAKyE,iBAGd3E,OACEE,KAAKI,wBAAwB2E,MAAMC,UAAYhF,KAAKyE,kBAAuBzE,KAAKiF,sBAAR,KACxEjF,KAAK2C,aAAa,QAAQ,GAC1B3C,KAAKE,MAAMyC,aAAa,iBAAiB,GACzC3C,KAAKK,QAAS,EAGhBP,MAAMoF,GAAkB,GAClBA,IACFlF,KAAKE,MAAMe,MAAQ,GACnBjB,KAAKwE,gBAAgB,YAGvB,MAAMW,EAAWnF,KAAKG,cAAc,0BAEhCgF,GAAUA,EAASxC,aAAa,iBAAiB,GAErD3C,KAAKE,MAAMyC,aAAa,wBAAyB,IACjD3C,KAAKwE,gBAAgB,QACrBxE,KAAKE,MAAMyC,aAAa,iBAAiB,GACzC3C,KAAKyE,kBAAmB,EACxBzE,KAAKI,wBAAwBoE,gBAAgB,SAE7CxE,KAAKK,QAAS,GAIlB+E,eAAeC,OAAO,oBAAqBzF","file":"predictive-search.js","sourcesContent":["class PredictiveSearch extends HTMLElement {\n  constructor() {\n    super();\n    this.cachedResults = {};\n    this.input = this.querySelector('input[type=\"search\"]');\n    this.predictiveSearchResults = this.querySelector('[data-predictive-search]');\n    this.isOpen = false;\n\n    this.setupEventListeners();\n  }\n\n  setupEventListeners() {\n    const form = this.querySelector('form.search');\n    form.addEventListener('submit', this.onFormSubmit.bind(this));\n\n    this.input.addEventListener('input', debounce((event) => {\n      this.onChange(event);\n    }, 300).bind(this));\n    this.input.addEventListener('focus', this.onFocus.bind(this));\n    this.addEventListener('focusout', this.onFocusOut.bind(this));\n    this.addEventListener('keyup', this.onKeyup.bind(this));\n    this.addEventListener('keydown', this.onKeydown.bind(this));\n  }\n\n  getQuery() {\n    return this.input.value.trim();\n  }\n\n  onChange() {\n    const searchTerm = this.getQuery();\n\n    if (!searchTerm.length) {\n      this.close(true);\n      return;\n    }\n\n    this.getSearchResults(searchTerm);\n  }\n\n  onFormSubmit(event) {\n    if (!this.getQuery().length || this.querySelector('[aria-selected=\"true\"] a')) event.preventDefault();\n  }\n\n  onFocus() {\n    const searchTerm = this.getQuery();\n\n    if (!searchTerm.length) return;\n\n    if (this.getAttribute('results') === 'true') {\n      this.open();\n    } else {\n      this.getSearchResults(searchTerm);\n    }\n  }\n\n  onFocusOut() {\n    setTimeout(() => {\n      if (!this.contains(document.activeElement)) this.close();\n    })\n  }\n\n  onKeyup(event) {\n    if (!this.getQuery().length) this.close(true);\n    event.preventDefault();\n\n    switch (event.code) {\n      case 'ArrowUp':\n        this.switchOption('up')\n        break;\n      case 'ArrowDown':\n        this.switchOption('down');\n        break;\n      case 'Enter':\n        this.selectOption();\n        break;\n    }\n  }\n\n  onKeydown(event) {\n    // Prevent the cursor from moving in the input when using the up and down arrow keys\n    if (\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  switchOption(direction) {\n    if (!this.getAttribute('open')) return;\n\n    const moveUp = direction === 'up';\n    const selectedElement = this.querySelector('[aria-selected=\"true\"]');\n    const allElements = this.querySelectorAll('li');\n    let activeElement = this.querySelector('li');\n\n    if (moveUp && !selectedElement) return;\n\n    this.statusElement.textContent = '';\n\n    if (!moveUp && selectedElement) {\n      activeElement = selectedElement.nextElementSibling || allElements[0];\n    } else if (moveUp) {\n      activeElement = selectedElement.previousElementSibling || allElements[allElements.length - 1];\n    }\n\n    if (activeElement === selectedElement) return;\n\n    activeElement.setAttribute('aria-selected', true);\n    if (selectedElement) selectedElement.setAttribute('aria-selected', false);\n\n    this.setLiveRegionText(activeElement.textContent);\n    this.input.setAttribute('aria-activedescendant', activeElement.id);\n  }\n\n  selectOption() {\n    const selectedProduct = this.querySelector('[aria-selected=\"true\"] a, [aria-selected=\"true\"] button');\n\n    if (selectedProduct) selectedProduct.click();\n  }\n\n  getSearchResults(searchTerm) {\n    const queryKey = searchTerm.replace(\" \", \"-\").toLowerCase();\n    this.setLiveRegionLoadingState();\n\n    if (this.cachedResults[queryKey]) {\n      this.renderSearchResults(this.cachedResults[queryKey]);\n      return;\n    }\n\n    fetch(`${routes.predictive_search_url}?q=${encodeURIComponent(searchTerm)}&${encodeURIComponent('resources[type]')}=product&${encodeURIComponent('resources[limit]')}=4&section_id=predictive-search`)\n      .then((response) => {\n        if (!response.ok) {\n          var error = new Error(response.status);\n          this.close();\n          throw error;\n        }\n\n        return response.text();\n      })\n      .then((text) => {\n        const resultsMarkup = new DOMParser().parseFromString(text, 'text/html').querySelector('#shopify-section-predictive-search').innerHTML;\n        this.cachedResults[queryKey] = resultsMarkup;\n        this.renderSearchResults(resultsMarkup);\n      })\n      .catch((error) => {\n        this.close();\n        throw error;\n      });\n  }\n\n  setLiveRegionLoadingState() {\n    this.statusElement = this.statusElement || this.querySelector('.predictive-search-status');\n    this.loadingText = this.loadingText || this.getAttribute('data-loading-text');\n\n    this.setLiveRegionText(this.loadingText);\n    this.setAttribute('loading', true);\n  }\n\n  setLiveRegionText(statusText) {\n    this.statusElement.setAttribute('aria-hidden', 'false');\n    this.statusElement.textContent = statusText;\n\n    setTimeout(() => {\n      this.statusElement.setAttribute('aria-hidden', 'true');\n    }, 1000);\n  }\n\n  renderSearchResults(resultsMarkup) {\n    this.predictiveSearchResults.innerHTML = resultsMarkup;\n    this.setAttribute('results', true);\n\n    this.setLiveRegionResults();\n    this.open();\n  }\n\n  setLiveRegionResults() {\n    this.removeAttribute('loading');\n    this.setLiveRegionText(this.querySelector('[data-predictive-search-live-region-count-value]').textContent);\n  }\n\n  getResultsMaxHeight() {\n    this.resultsMaxHeight = window.innerHeight - document.getElementById('shopify-section-header').getBoundingClientRect().bottom;\n    return this.resultsMaxHeight;\n  }\n\n  open() {\n    this.predictiveSearchResults.style.maxHeight = this.resultsMaxHeight || `${this.getResultsMaxHeight()}px`;\n    this.setAttribute('open', true);\n    this.input.setAttribute('aria-expanded', true);\n    this.isOpen = true;\n  }\n\n  close(clearSearchTerm = false) {\n    if (clearSearchTerm) {\n      this.input.value = '';\n      this.removeAttribute('results');\n    }\n\n    const selected = this.querySelector('[aria-selected=\"true\"]');\n\n    if (selected) selected.setAttribute('aria-selected', false);\n\n    this.input.setAttribute('aria-activedescendant', '');\n    this.removeAttribute('open');\n    this.input.setAttribute('aria-expanded', false);\n    this.resultsMaxHeight = false\n    this.predictiveSearchResults.removeAttribute('style');\n\n    this.isOpen = false;\n  }\n}\n\ncustomElements.define('predictive-search', PredictiveSearch);\n"]}