{"version":3,"sources":["media-gallery.js"],"names":["customElements","get","define","HTMLElement","[object Object]","super","this","elements","liveRegion","querySelector","viewer","thumbnails","mql","window","matchMedia","addEventListener","debounce","onSlideChanged","bind","querySelectorAll","forEach","mediaToSwitch","setActiveMedia","dataset","target","desktopLayout","matches","removeListSemantic","event","thumbnail","detail","currentElement","mediaId","setActiveThumbnail","prepend","activeMedia","element","classList","remove","add","parentElement","activeThumbnail","slider","resetPages","preventStickyHeader","setTimeout","scrollTo","left","offsetLeft","scrollIntoView","behavior","playActiveMedia","announceLiveRegion","mediaPosition","removeAttribute","setAttribute","isSlideVisible","activeItem","position","image","onload","innerHTML","accessibilityStrings","imageAvailable","replace","src","pauseAllMedia","deferredMedia","loadContent","stickyHeader","document","dispatchEvent","Event","sliderItems","slide"],"mappings":"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","file":"media-gallery.js","sourcesContent":["if (!customElements.get('media-gallery')) {\n  customElements.define('media-gallery', class MediaGallery extends HTMLElement {\n    constructor() {\n      super();\n      this.elements = {\n        liveRegion: this.querySelector('[id^=\"GalleryStatus\"]'),\n        viewer: this.querySelector('[id^=\"GalleryViewer\"]'),\n        thumbnails: this.querySelector('[id^=\"GalleryThumbnails\"]')\n      }\n      this.mql = window.matchMedia('(min-width: 750px)');\n      if (!this.elements.thumbnails) return;\n\n      this.elements.viewer.addEventListener('slideChanged', debounce(this.onSlideChanged.bind(this), 500));\n      this.elements.thumbnails.querySelectorAll('[data-target]').forEach((mediaToSwitch) => {\n        mediaToSwitch.querySelector('button').addEventListener('click', this.setActiveMedia.bind(this, mediaToSwitch.dataset.target, false));\n      });\n      if (this.dataset.desktopLayout !== 'stacked' && this.mql.matches) this.removeListSemantic();\n    }\n\n    onSlideChanged(event) {\n      const thumbnail = this.elements.thumbnails.querySelector(`[data-target=\"${ event.detail.currentElement.dataset.mediaId }\"]`);\n      this.setActiveThumbnail(thumbnail);\n    }\n\n    setActiveMedia(mediaId, prepend) {\n      const activeMedia = this.elements.viewer.querySelector(`[data-media-id=\"${ mediaId }\"]`);\n      this.elements.viewer.querySelectorAll('[data-media-id]').forEach((element) => {\n        element.classList.remove('is-active');\n      });\n      activeMedia.classList.add('is-active');\n\n      if (prepend) {\n        activeMedia.parentElement.prepend(activeMedia);\n        if (this.elements.thumbnails) {\n          const activeThumbnail = this.elements.thumbnails.querySelector(`[data-target=\"${ mediaId }\"]`);\n          activeThumbnail.parentElement.prepend(activeThumbnail);\n        }\n        if (this.elements.viewer.slider) this.elements.viewer.resetPages();\n      }\n\n      this.preventStickyHeader();\n      window.setTimeout(() => {\n        if (this.elements.thumbnails) {\n          activeMedia.parentElement.scrollTo({ left: activeMedia.offsetLeft });\n        }\n        if (!this.elements.thumbnails || this.dataset.desktopLayout === 'stacked') {\n          activeMedia.scrollIntoView({behavior: 'smooth'});\n        }\n      });\n      this.playActiveMedia(activeMedia);\n\n      if (!this.elements.thumbnails) return;\n      const activeThumbnail = this.elements.thumbnails.querySelector(`[data-target=\"${ mediaId }\"]`);\n      this.setActiveThumbnail(activeThumbnail);\n      this.announceLiveRegion(activeMedia, activeThumbnail.dataset.mediaPosition);\n    }\n\n    setActiveThumbnail(thumbnail) {\n      if (!this.elements.thumbnails || !thumbnail) return;\n\n      this.elements.thumbnails.querySelectorAll('button').forEach((element) => element.removeAttribute('aria-current'));\n      thumbnail.querySelector('button').setAttribute('aria-current', true);\n      if (this.elements.thumbnails.isSlideVisible(thumbnail, 10)) return;\n\n      this.elements.thumbnails.slider.scrollTo({ left: thumbnail.offsetLeft });\n    }\n\n    announceLiveRegion(activeItem, position) {\n      const image = activeItem.querySelector('.product__modal-opener--image img');\n      if (!image) return;\n      image.onload = () => {\n        this.elements.liveRegion.setAttribute('aria-hidden', false);\n        this.elements.liveRegion.innerHTML = window.accessibilityStrings.imageAvailable.replace(\n          '[index]',\n          position\n        );\n        setTimeout(() => {\n          this.elements.liveRegion.setAttribute('aria-hidden', true);\n        }, 2000);\n      };\n      image.src = image.src;\n    }\n\n    playActiveMedia(activeItem) {\n      window.pauseAllMedia();\n      const deferredMedia = activeItem.querySelector('.deferred-media');\n      if (deferredMedia) deferredMedia.loadContent(false);\n    }\n\n    preventStickyHeader() {\n      this.stickyHeader = this.stickyHeader || document.querySelector('sticky-header');\n      if (!this.stickyHeader) return;\n      this.stickyHeader.dispatchEvent(new Event('preventHeaderReveal'));\n    }\n\n    removeListSemantic() {\n      if (!this.elements.viewer.slider) return;\n      this.elements.viewer.slider.setAttribute('role', 'presentation');\n      this.elements.viewer.sliderItems.forEach(slide => slide.setAttribute('role', 'presentation'));\n    }\n  });\n}\n"]}