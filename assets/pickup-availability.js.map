{"version":3,"sources":["pickup-availability.js"],"names":["customElements","get","define","HTMLElement","[object Object]","super","this","hasAttribute","errorHtml","querySelector","content","firstElementChild","cloneNode","onClickRefreshList","bind","fetchAvailability","dataset","variantId","rootUrl","endsWith","fetch","then","response","text","sectionInnerHTML","DOMParser","parseFromString","renderPreview","catch","e","button","removeEventListener","renderError","evt","innerHTML","appendChild","addEventListener","drawer","document","remove","removeAttribute","outerHTML","setAttribute","body","show","target","onBodyClick","handleBodyClick","hide","event","code","toUpperCase","closest","id","classList","removeTrapFocus","focusElement","add","trapFocus"],"mappings":"AAAKA,eAAeC,IAAI,wBACtBD,eAAeE,OAAO,sBAAuB,cAAiCC,YAC5EC,cACEC,QAEIC,KAAKC,aAAa,eAEtBD,KAAKE,UAAYF,KAAKG,cAAc,YAAYC,QAAQC,kBAAkBC,WAAU,GACpFN,KAAKO,mBAAqBP,KAAKO,mBAAmBC,KAAKR,MACvDA,KAAKS,kBAAkBT,KAAKU,QAAQC,YAGtCb,kBAAkBa,GAChB,IAAIC,EAAUZ,KAAKU,QAAQE,QACtBA,EAAQC,SAAS,OACpBD,GAAoB,KAItBE,MAF0B,GAAGF,aAAmBD,qCAG7CI,KAAKC,GAAYA,EAASC,QAC1BF,KAAKE,IACJ,MAAMC,GAAmB,IAAIC,WAC1BC,gBAAgBH,EAAM,aACtBd,cAAc,oBACjBH,KAAKqB,cAAcH,KAEpBI,MAAMC,IACL,MAAMC,EAASxB,KAAKG,cAAc,UAC9BqB,GAAQA,EAAOC,oBAAoB,QAASzB,KAAKO,oBACrDP,KAAK0B,gBAIX5B,mBAAmB6B,GACjB3B,KAAKS,kBAAkBT,KAAKU,QAAQC,WAGtCb,cACEE,KAAK4B,UAAY,GACjB5B,KAAK6B,YAAY7B,KAAKE,WAEtBF,KAAKG,cAAc,UAAU2B,iBAAiB,QAAS9B,KAAKO,oBAG9DT,cAAcoB,GACZ,MAAMa,EAASC,SAAS7B,cAAc,8BAEtC,GADI4B,GAAQA,EAAOE,UACdf,EAAiBf,cAAc,+BAGlC,OAFAH,KAAK4B,UAAY,QACjB5B,KAAKkC,gBAAgB,aAIvBlC,KAAK4B,UAAYV,EAAiBf,cAAc,+BAA+BgC,UAC/EnC,KAAKoC,aAAa,YAAa,IAE/BJ,SAASK,KAAKR,YAAYX,EAAiBf,cAAc,+BAEzD,MAAMqB,EAASxB,KAAKG,cAAc,UAC9BqB,GAAQA,EAAOM,iBAAiB,QAAUH,IAC5CK,SAAS7B,cAAc,8BAA8BmC,KAAKX,EAAIY,aAMjE7C,eAAeC,IAAI,+BACtBD,eAAeE,OAAO,6BAA8B,cAAuCC,YACzFC,cACEC,QAEAC,KAAKwC,YAAcxC,KAAKyC,gBAAgBjC,KAAKR,MAE7CA,KAAKG,cAAc,UAAU2B,iBAAiB,QAAS,KACrD9B,KAAK0C,SAGP1C,KAAK8B,iBAAiB,QAAS,KACG,WAA7Ba,MAAMC,KAAKC,eAA4B7C,KAAK0C,SAInD5C,gBAAgB6B,GACd,MAAMY,EAASZ,EAAIY,OACfA,GAAUvC,MAASuC,EAAOO,QAAQ,+BAA8C,gCAAbP,EAAOQ,IAC5E/C,KAAK0C,OAIT5C,OACEE,KAAKkC,gBAAgB,QACrBF,SAASK,KAAKZ,oBAAoB,QAASzB,KAAKwC,aAChDR,SAASK,KAAKW,UAAUf,OAAO,mBAC/BgB,gBAAgBjD,KAAKkD,cAGvBpD,KAAKoD,GACHlD,KAAKkD,aAAeA,EACpBlD,KAAKoC,aAAa,OAAQ,IAC1BJ,SAASK,KAAKP,iBAAiB,QAAS9B,KAAKwC,aAC7CR,SAASK,KAAKW,UAAUG,IAAI,mBAC5BC,UAAUpD","file":"pickup-availability.js","sourcesContent":["if (!customElements.get('pickup-availability')) {\n  customElements.define('pickup-availability', class PickupAvailability extends HTMLElement {\n    constructor() {\n      super();\n\n      if(!this.hasAttribute('available')) return;\n\n      this.errorHtml = this.querySelector('template').content.firstElementChild.cloneNode(true);\n      this.onClickRefreshList = this.onClickRefreshList.bind(this);\n      this.fetchAvailability(this.dataset.variantId);\n    }\n\n    fetchAvailability(variantId) {\n      let rootUrl = this.dataset.rootUrl;\n      if (!rootUrl.endsWith(\"/\")) {\n        rootUrl = rootUrl + \"/\";\n      }\n      const variantSectionUrl = `${rootUrl}variants/${variantId}/?section_id=pickup-availability`;\n\n      fetch(variantSectionUrl)\n        .then(response => response.text())\n        .then(text => {\n          const sectionInnerHTML = new DOMParser()\n            .parseFromString(text, 'text/html')\n            .querySelector('.shopify-section');\n          this.renderPreview(sectionInnerHTML);\n        })\n        .catch(e => {\n          const button = this.querySelector('button');\n          if (button) button.removeEventListener('click', this.onClickRefreshList);\n          this.renderError();\n        });\n    }\n\n    onClickRefreshList(evt) {\n      this.fetchAvailability(this.dataset.variantId);\n    }\n\n    renderError() {\n      this.innerHTML = '';\n      this.appendChild(this.errorHtml);\n\n      this.querySelector('button').addEventListener('click', this.onClickRefreshList);\n    }\n\n    renderPreview(sectionInnerHTML) {\n      const drawer = document.querySelector('pickup-availability-drawer');\n      if (drawer) drawer.remove();\n      if (!sectionInnerHTML.querySelector('pickup-availability-preview')) {\n        this.innerHTML = \"\";\n        this.removeAttribute('available');\n        return;\n      }\n\n      this.innerHTML = sectionInnerHTML.querySelector('pickup-availability-preview').outerHTML;\n      this.setAttribute('available', '');\n\n      document.body.appendChild(sectionInnerHTML.querySelector('pickup-availability-drawer'));\n\n      const button = this.querySelector('button');\n      if (button) button.addEventListener('click', (evt) => {\n        document.querySelector('pickup-availability-drawer').show(evt.target);\n      });\n    }\n  });\n}\n\nif (!customElements.get('pickup-availability-drawer')) {\n  customElements.define('pickup-availability-drawer', class PickupAvailabilityDrawer extends HTMLElement {\n    constructor() {\n      super();\n\n      this.onBodyClick = this.handleBodyClick.bind(this);\n\n      this.querySelector('button').addEventListener('click', () => {\n        this.hide();\n      });\n\n      this.addEventListener('keyup', () => {\n        if(event.code.toUpperCase() === 'ESCAPE') this.hide();\n      });\n    }\n\n    handleBodyClick(evt) {\n      const target = evt.target;\n      if (target != this && !target.closest('pickup-availability-drawer') && target.id != 'ShowPickupAvailabilityDrawer') {\n        this.hide();\n      }\n    }\n\n    hide() {\n      this.removeAttribute('open');\n      document.body.removeEventListener('click', this.onBodyClick);\n      document.body.classList.remove('overflow-hidden');\n      removeTrapFocus(this.focusElement);\n    }\n\n    show(focusElement) {\n      this.focusElement = focusElement;\n      this.setAttribute('open', '');\n      document.body.addEventListener('click', this.onBodyClick);\n      document.body.classList.add('overflow-hidden');\n      trapFocus(this);\n    }\n  });\n}\n"]}