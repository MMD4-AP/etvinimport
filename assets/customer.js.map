{"version":3,"sources":["customer.js"],"names":["selectors","customerAddresses","addressCountrySelect","addressContainer","toggleAddressButton","cancelAddressButton","deleteAddressButton","attributes","expanded","confirmMessage","CustomerAddresses","[object Object]","this","elements","_getElements","Object","keys","length","_setupCountries","_setupEventListeners","container","document","querySelector","toggleButtons","querySelectorAll","cancelButtons","deleteButtons","countrySelects","Shopify","CountryProvinceSelector","hideElement","forEach","select","formId","dataset","element","addEventListener","_handleAddEditButtonClick","_handleCancelButtonClick","_handleDeleteButtonClick","target","setAttribute","getAttribute","toString","currentTarget","_toggleExpanded","closest","confirm","postLink","parameters","_method"],"mappings":"AAAA,MAAMA,UAAY,CAChBC,kBAAmB,4BACnBC,qBAAsB,gCACtBC,iBAAkB,iBAClBC,oBAAqB,wBACrBC,oBAAqB,uBACrBC,oBAAqB,gCAGjBC,WAAa,CACjBC,SAAU,gBACVC,eAAgB,wBAGlB,MAAMC,kBACJC,cACEC,KAAKC,SAAWD,KAAKE,eACqB,IAAtCC,OAAOC,KAAKJ,KAAKC,UAAUI,SAC/BL,KAAKM,kBACLN,KAAKO,wBAGPR,eACE,MAAMS,EAAYC,SAASC,cAActB,UAAUC,mBACnD,OAAOmB,EAAY,CACjBA,UAAAA,EACAjB,iBAAkBiB,EAAUE,cAActB,UAAUG,kBACpDoB,cAAeF,SAASG,iBAAiBxB,UAAUI,qBACnDqB,cAAeL,EAAUI,iBAAiBxB,UAAUK,qBACpDqB,cAAeN,EAAUI,iBAAiBxB,UAAUM,qBACpDqB,eAAgBP,EAAUI,iBAAiBxB,UAAUE,uBACnD,GAGNS,kBACMiB,SAAWA,QAAQC,0BAErB,IAAID,QAAQC,wBAAwB,oBAAqB,qBAAsB,CAC7EC,YAAa,gCAEflB,KAAKC,SAASc,eAAeI,QAASC,IACpC,MAAMC,EAASD,EAAOE,QAAQD,OAE9B,IAAIL,QAAQC,wBAAwB,kBAAkBI,EAAU,mBAAmBA,EAAU,CAC3FH,YAAa,4BAA4BG,OAMjDtB,uBACEC,KAAKC,SAASU,cAAcQ,QAASI,IACnCA,EAAQC,iBAAiB,QAASxB,KAAKyB,6BAEzCzB,KAAKC,SAASY,cAAcM,QAASI,IACnCA,EAAQC,iBAAiB,QAASxB,KAAK0B,4BAEzC1B,KAAKC,SAASa,cAAcK,QAASI,IACnCA,EAAQC,iBAAiB,QAASxB,KAAK2B,4BAI3C5B,gBAAgB6B,GACdA,EAAOC,aACLlC,WAAWC,UACmC,UAA7CgC,EAAOE,aAAanC,WAAWC,WAAuBmC,YAI3DhC,0BAA4B,EAAGiC,cAAAA,MAC7BhC,KAAKiC,gBAAgBD,IAGvBjC,yBAA2B,EAAGiC,cAAAA,MAC5BhC,KAAKiC,gBACHD,EACGE,QAAQ9C,UAAUG,kBAClBmB,cAAc,IAAIf,WAAWC,eAIpCG,yBAA2B,EAAGiC,cAAAA,MAExBG,QAAQH,EAAcF,aAAanC,WAAWE,kBAChDmB,QAAQoB,SAASJ,EAAcV,QAAQM,OAAQ,CAC7CS,WAAY,CAAEC,QAAS","file":"customer.js","sourcesContent":["const selectors = {\n  customerAddresses: '[data-customer-addresses]',\n  addressCountrySelect: '[data-address-country-select]',\n  addressContainer: '[data-address]',\n  toggleAddressButton: 'button[aria-expanded]',\n  cancelAddressButton: 'button[type=\"reset\"]',\n  deleteAddressButton: 'button[data-confirm-message]'\n};\n\nconst attributes = {\n  expanded: 'aria-expanded',\n  confirmMessage: 'data-confirm-message'\n};\n\nclass CustomerAddresses {\n  constructor() {\n    this.elements = this._getElements();\n    if (Object.keys(this.elements).length === 0) return;\n    this._setupCountries();\n    this._setupEventListeners();\n  }\n\n  _getElements() {\n    const container = document.querySelector(selectors.customerAddresses);\n    return container ? {\n      container,\n      addressContainer: container.querySelector(selectors.addressContainer),\n      toggleButtons: document.querySelectorAll(selectors.toggleAddressButton),\n      cancelButtons: container.querySelectorAll(selectors.cancelAddressButton),\n      deleteButtons: container.querySelectorAll(selectors.deleteAddressButton),\n      countrySelects: container.querySelectorAll(selectors.addressCountrySelect)\n    } : {};\n  }\n\n  _setupCountries() {\n    if (Shopify && Shopify.CountryProvinceSelector) {\n      // eslint-disable-next-line no-new\n      new Shopify.CountryProvinceSelector('AddressCountryNew', 'AddressProvinceNew', {\n        hideElement: 'AddressProvinceContainerNew'\n      });\n      this.elements.countrySelects.forEach((select) => {\n        const formId = select.dataset.formId;\n        // eslint-disable-next-line no-new\n        new Shopify.CountryProvinceSelector(`AddressCountry_${formId}`, `AddressProvince_${formId}`, {\n          hideElement: `AddressProvinceContainer_${formId}`\n        });\n      });\n    }\n  }\n\n  _setupEventListeners() {\n    this.elements.toggleButtons.forEach((element) => {\n      element.addEventListener('click', this._handleAddEditButtonClick);\n    });\n    this.elements.cancelButtons.forEach((element) => {\n      element.addEventListener('click', this._handleCancelButtonClick);\n    });\n    this.elements.deleteButtons.forEach((element) => {\n      element.addEventListener('click', this._handleDeleteButtonClick);\n    });\n  }\n\n  _toggleExpanded(target) {\n    target.setAttribute(\n      attributes.expanded,\n      (target.getAttribute(attributes.expanded) === 'false').toString()\n    );\n  }\n\n  _handleAddEditButtonClick = ({ currentTarget }) => {\n    this._toggleExpanded(currentTarget);\n  }\n\n  _handleCancelButtonClick = ({ currentTarget }) => {\n    this._toggleExpanded(\n      currentTarget\n        .closest(selectors.addressContainer)\n        .querySelector(`[${attributes.expanded}]`)\n    )\n  }\n\n  _handleDeleteButtonClick = ({ currentTarget }) => {\n    // eslint-disable-next-line no-alert\n    if (confirm(currentTarget.getAttribute(attributes.confirmMessage))) {\n      Shopify.postLink(currentTarget.dataset.target, {\n        parameters: { _method: 'delete' },\n      });\n    }\n  }\n}\n"]}