{{ 'section-guide.css' | asset_url | stylesheet_tag }}
{{ 'component-product-card.css' | asset_url | stylesheet_tag }}


<div id="app">
    <template v-if="allProducts">
        <div class="guide page-width">
            <h2 v-text="guideTitle"></h2>
            <p v-text="guideDescription"></p>
            <p v-if="!guideCompleted" class="question-number text-center">
                Sp√∏rgsm√•l <span v-text="getCurrentQuestion.questionNumber"></span> af <span v-text="questions.length"></span>
            </p>
            <Transition name="fade">
                <div v-if="!guideCompleted" class="question">
                    <h2 v-text="`${getCurrentQuestion.questionNumber}. ${getCurrentQuestion.question}`" class="question__heading"></h2>
                    <div class="options">
                        <label v-for="(option, index) in getCurrentQuestion.options" :key="index">
                            <input type="radio" 
                            :value="index"
                            >
                            <span v-text="option" @click="addToUserOptions(option); nextQuestion()"></span>
                        </label>
                    </div>
                    <div v-if="userOptions.length" class="guide__options">
                        <h4>Dine valg:</h4>
                        <span v-for="(option, index) in userOptions" :key="index" v-text="option"></span>
                    </div>
                </div>
            </Transition>
                <div v-if="guideCompleted">
                    <div v-if="userOptions" class="guide__options">
                        <h4>Dine valg:</h4>
                        <span v-for="(option, index) in userOptions" :key="index" v-text="option"></span>
                    </div>
                    <h4>Anbefalinger:</h4>
                    <div v-if="guideCompleted && results">
                        <ul class="grid product-grid grid--2-col-tablet-down grid--4-col-desktop">
                            <li v-for="(product, index) in results" :key="index" class="grid__item">
                                <a :href="product.url">
                                    <div class="card">
                                        <div class="card__media">
                                            <img :src="product.featured_media">
                                        </div>
                                            <div class="card__content">
                                                <div class="card__information">
                                                    <span class="visually-hidden" v-text="product.brand"></span>
                                                    <span class="caption-with-letter-spacing light" v-text="product.brand"></span>
                                                <h3 class="card__heading h5">
                                                    <a :href="product.url" class="full-unstyled-link" v-text="product.title"></a>
                                                </h3>
                                                <div class="card-information">
                                                    <span class="price-item price-item--regular" v-text="product.price"></span>
                                                    <div class="card__origin">
                                                        <div>
                                                            <img :src="product.flag" :alt="product.land">
                                                            <span v-text="product.land"></span>
                                                        </div>
                                                        <div v-if="product.grapes">
                                                            <img src="{{ 'grape_sort.png' | asset_img_url }}" :alt="product.drue">
                                                            <span v-for="(grape, index) in product.grapes" :key="index" v-text="grape"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <form class="card__add" method="post" action="/cart/add" onclick="addToCart(event)">
                                                    <input type="hidden" name="id" :value="product.variants[0]" />
                                                    <input min="1" type="number" id="quantity" name="quantity" :value="selectedQuantity"/>
                                                    <button type="submit" value="L√¶g i kurv" class="button">L√¶g i kurv</button>
                                                </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div v-if="guideCompleted && !results">
                        Vi fandt desv√¶rre ingen anbefalinger. Pr√∏v guiden igen.
                    </div>
                </div>
                <div v-if="guideCompleted" class="page-width guide__reset">
                    <a role="link" class="link animate-arrow" @click="startOver();">
                        Start forfra 
                        <span class="icon-wrap">
                            <svg viewBox="0 0 14 10" fill="none" aria-hidden="true" focusable="false" role="presentation" class="icon icon-arrow" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" 
                                clip-rule="evenodd" d="M8.537.808a.5.5 0 01.817-.162l4 4a.5.5 0 010 .708l-4 4a.5.5 0 11-.708-.708L11.793 5.5H1a.5.5 0 010-1h10.793L8.646 1.354a.5.5 0 01-.109-.546z" 
                                fill="currentColor">
                            </path>
                            </svg>
                        </span>
                    </a>
                </div>
            </div>
    </template>
    <template v-else-if="notFound">
        <div class="guide page-width">
            <p class="text-center">
                For at finde god vin skal der findes nogle gode produkter. Vi kunne desv√¶rre ikke hente nogle produkter til vinguide.
            </p>
            <p class="text-center">
                Pr√∏v at indl√¶se siden igen.
            </p>
        </div>
    </template>
    <template v-else>
        <div class="guide page-width">
            <p class="text-center">
                Gode vin tager tid, det samme g√∏r denne vinguide. Vent venligst mens vinguiden indl√¶ses üç∑ 
            </p>
        </div>
    </template>
</div>
<script src="https://unpkg.com/vue@3"></script>

<script>
    const options = {
        name: "GuideApp",
        data() {
            return {
                allProducts: null,
                guideTitle: "{{ section.settings.guide_title }}",
                guideDescription: "{{ section.settings.guide_description }}",
                fetchURL: window.Shopify.routes.root + "collections/all?view=json",
                tags: [],
                filters: [],
                questions:[{% for block in section.blocks %}{% case block.type %}{% when 'question' %}
                        {
                            question: "{{ block.settings.question_title }}",
                            options: [
                                {{ block.settings.answers }}
                            ],
                            questionNumber: {{ forloop.index }}
                        }{% endcase %}{% unless forloop.last %},{% endunless %}{% endfor %}
                ],
                guideCompleted: false,
                currentQuestion: 0,
                userOptions: [],
                results: [],
                selectedQuantity: 1,
                notFound: false,
                hejHej: 'test'
            }
        },
        methods: {
            async getProducts() {
                try {
                    await fetch(this.fetchURL, {
                        mode: 'no-cors'
                    })
                    .then(res => res.json())
                    .then(data => {
                        this.allProducts = data.products
                        this.tags = data.tags
                        this.filters = data.filters
                    })
                } catch (e) {
                    return this.notFound = true
                }
            },            
            addToUserOptions(option) {
                this.userOptions.push(option);
            },
            nextQuestion() {
                if(this.currentQuestion < this.questions.length - 1) {
                    this.currentQuestion++
                } else {
                    this.guideCompleted = true
                    this.filteredProducts()
                    console.log(this.filteredProducts())
                }
            },
            filteredProducts() {
                const searchFilters = this.filters;
                const searchParams = this.userOptions;

                filterdResults = this.allProducts.filter((item) =>
                    searchFilters.some((a) => searchParams.includes(item[a]))
                )
                this.results = filterdResults.slice(0,4);
                return this.results
            },
            addToCart(event) {
                event.preventDefault()
            },
            startOver() {
                this.currentQuestion = 0
                this.userOptions = []
                this.results = null
                this.guideCompleted = false
            },
            moveUp() {
                window.scrollTo(0,0);
            }
        },
        created() {
            this.getProducts();
        },
        computed: {
            getCurrentQuestion() {
                let question = this.questions[this.currentQuestion]
                question.index = this.currentQuestion
                return question
            },
            noResults() {
                if(this.results == null) {
                    return false
                }
            }
        }
    }
    const GuideApp = Vue.createApp(options).mount('#app');
</script>

{% schema %}
{
    "name":"Guidesektion",
    "settings": [
        {
            "type":"header",
            "content":"Titel p√• guide"
        },
        {
            "type":"text",
            "id":"guide_title",
            "default":"Vinguide",
            "label":"Vinguide"
        },
        {
            "type":"header",
            "content":"Titel p√• guide"
        },
        {
            "type":"paragraph",
            "content":"Lav en passende beskrivelse af guiden."
        },
        {
            "type":"textarea",
            "id":"guide_description",
            "default":"Dette er en vinguide",
            "label":"Dette er en vinfuide"
        }
    ],
    "blocks":[
        {
            "type":"question",
            "name":"sp√∏rgsm√•l",
            "settings":[
                {
                    "type":"header",
                    "content":"Sp√∏rgsm√•l"
                },
                {
                    "type":"text",
                    "id":"question_title",
                    "default":"Skriv sp√∏rgsm√•let",
                    "label":"Sp√∏rgsm√•l"
                },
                {
                    "type":"paragraph",
                    "content":"Skriv svarene p√• sp√∏rgsm√•let nedenfor. Svar skal skrives for stort forbogstav og i anf√∏rselsteng ('') efterfulgt af et komma. Eks: 'Hvid', 'Mousserende', 'Portvin'"
                },
                {
                    "type":"textarea",
                    "id":"answers",
                    "default":"'Hvid', 'Mousserende', 'Portvin'",
                    "label":"Svar"
                }
            ]
        }
    ],
    "presets": [
    {
        "name": "Guide",
        "blocks": [
        {
            "type": "question"
        }
        ]
    }
    ]
 }
{% endschema %}